plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'maven-publish'
}

group 'org.example'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8 //指定编译编译.java文件的jdk版本
}
repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/spring' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    mavenCentral()
}

ext {
    springBootVersion = '2.4.5'  // 你当前使用的版本
    springCloudVersion = '2020.0.2'
    springCloudAlibabaVersion = '2.2.6.RELEASE'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}

// 没有这个的话。快照版本可能没那么快被更新到本地
configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    implementation 'junit:junit:4.13.1'
    // Nacos 依赖，添加版本控制
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'  // 重要！
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    //junit依赖配置
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    //springboot依赖配置
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'//actuator服务监控
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-quartz'//quartz定时任务

    //mybatis各种依赖配置
    implementation('com.baomidou:mybatis-plus-boot-starter:3.4.2') /*{
        exclude group: 'com.zaxxer', module: 'HikariCP'
    }*/
    implementation group: 'com.baomidou', name: 'mybatis-plus-generator', version: '3.4.1'//mybatis-plus自动生成代码依赖
    implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.3'
    implementation group: 'com.github.jeffreyning', name: 'mybatisplus-plus', version: '1.6.0-RELEASE'//mybatisplus联合主键依赖
    implementation 'com.alibaba:druid-spring-boot-starter:1.2.5'//druid连接池依赖
    implementation 'mysql:mysql-connector-java'//mysql驱动依赖
    implementation group: 'com.baomidou', name: 'dynamic-datasource-spring-boot-starter', version: '3.5.1'//多数据源依赖配置
    /*implementation('com.baomidou:dynamic-datasource-spring-boot-starter:3.5.1') {
        exclude group: 'com.zaxxer', module: 'HikariCP'
    }*/


    //lombok依赖
    implementation 'org.projectlombok:lombok:1.16.18'
    annotationProcessor("org.projectlombok:lombok:1.16.18")

    // MapStruct 依赖
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // Lombok 和 MapStruct 的集成
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    //oss上传工具依赖
    implementation group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '3.7.1'
    implementation group: 'com.aliyun', name: 'aliyun-java-sdk-dysmsapi', version: '1.1.0'
    implementation group: 'com.aliyun.oss', name: 'aliyun-sdk-oss', version: '3.10.2'
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.7'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'

    //io工具依赖
    implementation 'commons-io:commons-io:2.5'

    //java 常用类依赖
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation 'com.alibaba:fastjson:1.2.75'


    //java对象池commons-pool依赖
    implementation 'org.apache.commons:commons-pool2'

    //Swagger依赖
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    //okhttps依赖
    implementation group: 'com.ejlchina', name: 'okhttps', version: '3.1.1'

    //hutool工具依赖
    implementation 'cn.hutool:hutool-all:5.7.16'

    //编码工具类依赖
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.10'

    //flyway依赖
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'

    //easyexcel依赖
    implementation ("com.alibaba:easyexcel:3.0.5")

    //jasypt依赖  敏感信息加密
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot', version: '3.0.4'

    //velocity引擎依赖
    implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.3'

    //hutool
    implementation 'cn.hutool:hutool-all:5.7.16'

    //redisson
    implementation group: 'org.redisson', name: 'redisson', version: '3.11.3'

    //telegram
    implementation group: 'org.telegram', name: 'telegrambots', version: '6.9.7.1'

    //tron
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
    implementation 'com.google.protobuf:protobuf-java:3.11.0'
    implementation 'io.grpc:grpc-netty-shaded:1.31.0'
    implementation 'io.grpc:grpc-netty:1.31.0'
    implementation 'io.grpc:grpc-protobuf:1.31.0'
    implementation 'io.grpc:grpc-stub:1.31.0'
    implementation "org.bouncycastle:bcprov-jdk15on:1.68"
    implementation 'com.google.guava:guava:28.0-jre'
    // https://mvnrepository.com/artifact/com.google.zxing/core

    implementation('com.google.zxing:core:3.5.3') {
        exclude group: 'com.google.android', module: 'android'
    }
    implementation('com.google.zxing:javase:3.5.3') {
        exclude group: 'com.google.android', module: 'android'
    }

    //sa-token
    implementation 'cn.dev33:sa-token-spring-boot-starter:1.28.0'
    implementation 'cn.dev33:sa-token-dao-redis-jackson:1.28.0'
    implementation 'cn.dev33:sa-token-alone-redis:1.28.0'
    implementation 'cn.dev33:sa-token-oauth2:1.28.0'

    implementation 'com.nimbusds:nimbus-jose-jwt:9.16.1'

    // Sentinel 核心依赖
    implementation 'com.alibaba.csp:sentinel-core:1.8.6'
    // 如果需要通过 HTTP 协议与 Sentinel Dashboard 进行通信，添加传输依赖
    implementation 'com.alibaba.csp:sentinel-transport-simple-http:1.8.6'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel:2.2.6.RELEASE'

    implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.maxmind.geoip2:geoip2:2.9.0'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'
}

test {
    useJUnitPlatform()
}

sourceSets.main.resources.srcDirs = ["src/main/java","src/main/resources"]

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

